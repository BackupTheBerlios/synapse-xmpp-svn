#############################################################################
# Makefile for building: libqca_psi.a
# Generated by qmake (2.01a) (Qt 4.2.2) on: Mon Feb 19 20:05:21 2007
# Project:  qca.pro
# Template: lib
# Command: /usr/bin/qmake -unix -o Makefile qca.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = yacc
DEFINES       = -DQCA_STATIC -DBOTAN_TYPES_QT -DBOTAN_NO_INIT_H -DBOTAN_NO_CONF_H -DBOTAN_TOOLS_ONLY -DBOTAN_MINIMAL_BIGINT -DBOTAN_MP_WORD_BITS=32 -DBOTAN_VECTOR_OVER_ALLOCATE=4 -DOSSL_097 -DHAVE_OPENSSL -DQCA_SYSTEMSTORE_PATH=\"/etc/ssl/certs/ca-certificates.crt\" -DHAVE_XSS -DHAVE_ASPELL -DHAVE_DNOTIFY -DHAVE_GETHOSTBYNAME_R -DHAVE_SPEEX -DHAVE_GLIB -DHAVE_CONFIG -DQT_NO_DEBUG -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -fPIC -Wall -W -D_REENTRANT  $(DEFINES)
CXXFLAGS      = -pipe -O2 -fPIC -Wall -W -D_REENTRANT  $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4 -Iinclude/QtCrypto -I. -Ibotantools/botan -I/usr/include/speex -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I.moc -I.
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

SOURCES       = botantools/botan/util.cpp \
		botantools/botan/exceptn.cpp \
		botantools/botan/mutex.cpp \
		botantools/botan/mux_qt/mux_qt.cpp \
		botantools/botan/secalloc.cpp \
		botantools/botan/defalloc.cpp \
		botantools/botan/allocate.cpp \
		botantools/botan/mp_core.cpp \
		botantools/botan/mp_comba.cpp \
		botantools/botan/mp_fkmul.cpp \
		botantools/botan/mp_mul.cpp \
		botantools/botan/mp_smul.cpp \
		botantools/botan/mp_shift.cpp \
		botantools/botan/mp_misc.cpp \
		botantools/botan/numthry.cpp \
		botantools/botan/divide.cpp \
		botantools/botan/big_base.cpp \
		botantools/botan/big_code.cpp \
		botantools/botan/big_io.cpp \
		botantools/botan/big_ops2.cpp \
		botantools/botan/big_ops3.cpp \
		botantools/botan/ml_unix/mlock.cpp \
		botantools/botan/alloc_mmap/mmap_mem.cpp \
		support/synchronizer.cpp \
		support/dirwatch/dirwatch.cpp \
		support/dirwatch/dirwatch_unix.cpp \
		qca_tools.cpp \
		qca_core.cpp \
		qca_textfilter.cpp \
		qca_plugin.cpp \
		qca_basic.cpp \
		qca_publickey.cpp \
		qca_cert.cpp \
		qca_keystore.cpp \
		qca_securelayer.cpp \
		qca_securemessage.cpp \
		qca_default.cpp \
		support/qpipe.cpp \
		support/console.cpp \
		qca_systemstore_flatfile.cpp .moc/moc_qca_support.cpp \
		.moc/moc_qca_core.cpp \
		.moc/moc_qca_publickey.cpp \
		.moc/moc_qca_keystore.cpp \
		.moc/moc_qca_securelayer.cpp \
		.moc/moc_qca_securemessage.cpp \
		.moc/moc_qcaprovider.cpp \
		.moc/moc_qpipe.cpp \
		.moc/moc_dirwatch_p.cpp
OBJECTS       = .obj/util.o \
		.obj/exceptn.o \
		.obj/mutex.o \
		.obj/mux_qt.o \
		.obj/secalloc.o \
		.obj/defalloc.o \
		.obj/allocate.o \
		.obj/mp_core.o \
		.obj/mp_comba.o \
		.obj/mp_fkmul.o \
		.obj/mp_mul.o \
		.obj/mp_smul.o \
		.obj/mp_shift.o \
		.obj/mp_misc.o \
		.obj/numthry.o \
		.obj/divide.o \
		.obj/big_base.o \
		.obj/big_code.o \
		.obj/big_io.o \
		.obj/big_ops2.o \
		.obj/big_ops3.o \
		.obj/mlock.o \
		.obj/mmap_mem.o \
		.obj/synchronizer.o \
		.obj/dirwatch.o \
		.obj/dirwatch_unix.o \
		.obj/qca_tools.o \
		.obj/qca_core.o \
		.obj/qca_textfilter.o \
		.obj/qca_plugin.o \
		.obj/qca_basic.o \
		.obj/qca_publickey.o \
		.obj/qca_cert.o \
		.obj/qca_keystore.o \
		.obj/qca_securelayer.o \
		.obj/qca_securemessage.o \
		.obj/qca_default.o \
		.obj/qpipe.o \
		.obj/console.o \
		.obj/qca_systemstore_flatfile.o \
		.obj/moc_qca_support.o \
		.obj/moc_qca_core.o \
		.obj/moc_qca_publickey.o \
		.obj/moc_qca_keystore.o \
		.obj/moc_qca_securelayer.o \
		.obj/moc_qca_securemessage.o \
		.obj/moc_qcaprovider.o \
		.obj/moc_qpipe.o \
		.obj/moc_dirwatch_p.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		botantools/botantools.pri \
		support/dirwatch/dirwatch.pri \
		../../conf.pri \
		../qca.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		qca.pro
QMAKE_TARGET  = qca_psi
DESTDIR       = 
TARGET        = libqca_psi.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


Makefile: qca.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		botantools/botantools.pri \
		support/dirwatch/dirwatch.pri \
		../../conf.pri \
		../qca.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/libQtCore.prl
	$(QMAKE) -unix -o Makefile qca.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
botantools/botantools.pri:
support/dirwatch/dirwatch.pri:
../../conf.pri:
../qca.pri:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/staticlib.prf:
/usr/share/qt4/mkspecs/features/static.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile qca.pro

dist: 
	@$(CHK_DIR_EXISTS) .obj/qca_psi1.0.0 || $(MKDIR) .obj/qca_psi1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .obj/qca_psi1.0.0/ && $(COPY_FILE) --parents qca_plugin.h qca_systemstore.h include/QtCrypto/qca_export.h include/QtCrypto/qca_support.h include/QtCrypto/qca_tools.h include/QtCrypto/qca_core.h include/QtCrypto/qca_textfilter.h include/QtCrypto/qca_basic.h include/QtCrypto/qca_publickey.h include/QtCrypto/qca_cert.h include/QtCrypto/qca_keystore.h include/QtCrypto/qca_securelayer.h include/QtCrypto/qca_securemessage.h include/QtCrypto/qcaprovider.h include/QtCrypto/qpipe.h support/dirwatch/dirwatch_p.h .obj/qca_psi1.0.0/ && $(COPY_FILE) --parents botantools/botan/util.cpp botantools/botan/exceptn.cpp botantools/botan/mutex.cpp botantools/botan/mux_qt/mux_qt.cpp botantools/botan/secalloc.cpp botantools/botan/defalloc.cpp botantools/botan/allocate.cpp botantools/botan/mp_core.cpp botantools/botan/mp_comba.cpp botantools/botan/mp_fkmul.cpp botantools/botan/mp_mul.cpp botantools/botan/mp_smul.cpp botantools/botan/mp_shift.cpp botantools/botan/mp_misc.cpp botantools/botan/numthry.cpp botantools/botan/divide.cpp botantools/botan/big_base.cpp botantools/botan/big_code.cpp botantools/botan/big_io.cpp botantools/botan/big_ops2.cpp botantools/botan/big_ops3.cpp botantools/botan/ml_unix/mlock.cpp botantools/botan/alloc_mmap/mmap_mem.cpp support/synchronizer.cpp support/dirwatch/dirwatch.cpp support/dirwatch/dirwatch_unix.cpp qca_tools.cpp qca_core.cpp qca_textfilter.cpp qca_plugin.cpp qca_basic.cpp qca_publickey.cpp qca_cert.cpp qca_keystore.cpp qca_securelayer.cpp qca_securemessage.cpp qca_default.cpp support/qpipe.cpp support/console.cpp qca_systemstore_flatfile.cpp .obj/qca_psi1.0.0/ && (cd `dirname .obj/qca_psi1.0.0` && $(TAR) qca_psi1.0.0.tar qca_psi1.0.0 && $(COMPRESS) qca_psi1.0.0.tar) && $(MOVE) `dirname .obj/qca_psi1.0.0`/qca_psi1.0.0.tar.gz . && $(DEL_FILE) -r .obj/qca_psi1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


/usr/bin/moc:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: .moc/moc_qca_support.cpp .moc/moc_qca_core.cpp .moc/moc_qca_publickey.cpp .moc/moc_qca_keystore.cpp .moc/moc_qca_securelayer.cpp .moc/moc_qca_securemessage.cpp .moc/moc_qcaprovider.cpp .moc/moc_qpipe.cpp .moc/moc_dirwatch_p.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) .moc/moc_qca_support.cpp .moc/moc_qca_core.cpp .moc/moc_qca_publickey.cpp .moc/moc_qca_keystore.cpp .moc/moc_qca_securelayer.cpp .moc/moc_qca_securemessage.cpp .moc/moc_qcaprovider.cpp .moc/moc_qpipe.cpp .moc/moc_dirwatch_p.cpp
.moc/moc_qca_support.cpp: include/QtCrypto/qca_export.h \
		include/QtCrypto/qca_tools.h \
		include/QtCrypto/qca_support.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) include/QtCrypto/qca_support.h -o .moc/moc_qca_support.cpp

.moc/moc_qca_core.cpp: include/QtCrypto/qca_export.h \
		include/QtCrypto/qca_support.h \
		include/QtCrypto/qca_tools.h \
		include/QtCrypto/qca_core.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) include/QtCrypto/qca_core.h -o .moc/moc_qca_core.cpp

.moc/moc_qca_publickey.cpp: include/QtCrypto/qca_core.h \
		include/QtCrypto/qca_export.h \
		include/QtCrypto/qca_support.h \
		include/QtCrypto/qca_tools.h \
		include/QtCrypto/qca_publickey.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) include/QtCrypto/qca_publickey.h -o .moc/moc_qca_publickey.cpp

.moc/moc_qca_keystore.cpp: include/QtCrypto/qca_core.h \
		include/QtCrypto/qca_export.h \
		include/QtCrypto/qca_support.h \
		include/QtCrypto/qca_tools.h \
		include/QtCrypto/qca_cert.h \
		include/QtCrypto/qca_publickey.h \
		include/QtCrypto/qca_keystore.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) include/QtCrypto/qca_keystore.h -o .moc/moc_qca_keystore.cpp

.moc/moc_qca_securelayer.cpp: include/QtCrypto/qca_core.h \
		include/QtCrypto/qca_export.h \
		include/QtCrypto/qca_support.h \
		include/QtCrypto/qca_tools.h \
		include/QtCrypto/qca_publickey.h \
		include/QtCrypto/qca_cert.h \
		include/QtCrypto/qca_securelayer.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) include/QtCrypto/qca_securelayer.h -o .moc/moc_qca_securelayer.cpp

.moc/moc_qca_securemessage.cpp: include/QtCrypto/qca_core.h \
		include/QtCrypto/qca_export.h \
		include/QtCrypto/qca_support.h \
		include/QtCrypto/qca_tools.h \
		include/QtCrypto/qca_publickey.h \
		include/QtCrypto/qca_cert.h \
		include/QtCrypto/qca_securemessage.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) include/QtCrypto/qca_securemessage.h -o .moc/moc_qca_securemessage.cpp

.moc/moc_qcaprovider.cpp: include/QtCrypto/qca_core.h \
		include/QtCrypto/qca_export.h \
		include/QtCrypto/qca_support.h \
		include/QtCrypto/qca_tools.h \
		include/QtCrypto/qca_basic.h \
		include/QtCrypto/qca_publickey.h \
		include/QtCrypto/qca_cert.h \
		include/QtCrypto/qca_keystore.h \
		include/QtCrypto/qca_securelayer.h \
		include/QtCrypto/qca_securemessage.h \
		include/QtCrypto/qcaprovider.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) include/QtCrypto/qcaprovider.h -o .moc/moc_qcaprovider.cpp

.moc/moc_qpipe.cpp: include/QtCrypto/qpipe.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) include/QtCrypto/qpipe.h -o .moc/moc_qpipe.cpp

.moc/moc_dirwatch_p.cpp: support/dirwatch/dirwatch_p.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) support/dirwatch/dirwatch_p.h -o .moc/moc_dirwatch_p.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all: .moc/synchronizer.moc .moc/dirwatch.moc .moc/dirwatch_unix.moc .moc/qca_core.moc .moc/qca_publickey.moc .moc/qca_keystore.moc .moc/qca_securelayer.moc .moc/qca_securemessage.moc .moc/qca_default.moc .moc/qpipe.moc .moc/console.moc
compiler_moc_source_clean:
	-$(DEL_FILE) .moc/synchronizer.moc .moc/dirwatch.moc .moc/dirwatch_unix.moc .moc/qca_core.moc .moc/qca_publickey.moc .moc/qca_keystore.moc .moc/qca_securelayer.moc .moc/qca_securemessage.moc .moc/qca_default.moc .moc/qpipe.moc .moc/console.moc
.moc/synchronizer.moc: support/synchronizer.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) support/synchronizer.cpp -o .moc/synchronizer.moc

.moc/dirwatch.moc: support/dirwatch/dirwatch_p.h \
		support/dirwatch/dirwatch.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) support/dirwatch/dirwatch.cpp -o .moc/dirwatch.moc

.moc/dirwatch_unix.moc: support/dirwatch/dirwatch_p.h \
		support/dirwatch/dirwatch_unix.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) support/dirwatch/dirwatch_unix.cpp -o .moc/dirwatch_unix.moc

.moc/qca_core.moc: qca_plugin.h \
		qca_core.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) qca_core.cpp -o .moc/qca_core.moc

.moc/qca_publickey.moc: qca_publickey.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) qca_publickey.cpp -o .moc/qca_publickey.moc

.moc/qca_keystore.moc: qca_keystore.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) qca_keystore.cpp -o .moc/qca_keystore.moc

.moc/qca_securelayer.moc: qca_securelayer.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) qca_securelayer.cpp -o .moc/qca_securelayer.moc

.moc/qca_securemessage.moc: qca_securemessage.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) qca_securemessage.cpp -o .moc/qca_securemessage.moc

.moc/qca_default.moc: qca_systemstore.h \
		qca_default.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) qca_default.cpp -o .moc/qca_default.moc

.moc/qpipe.moc: support/qpipe.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) support/qpipe.cpp -o .moc/qpipe.moc

.moc/console.moc: support/console.cpp \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) support/console.cpp -o .moc/console.moc

compiler_uic_make_all:
compiler_uic_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

.obj/util.o: botantools/botan/util.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/util.o botantools/botan/util.cpp

.obj/exceptn.o: botantools/botan/exceptn.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/exceptn.o botantools/botan/exceptn.cpp

.obj/mutex.o: botantools/botan/mutex.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mutex.o botantools/botan/mutex.cpp

.obj/mux_qt.o: botantools/botan/mux_qt/mux_qt.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mux_qt.o botantools/botan/mux_qt/mux_qt.cpp

.obj/secalloc.o: botantools/botan/secalloc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/secalloc.o botantools/botan/secalloc.cpp

.obj/defalloc.o: botantools/botan/defalloc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/defalloc.o botantools/botan/defalloc.cpp

.obj/allocate.o: botantools/botan/allocate.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/allocate.o botantools/botan/allocate.cpp

.obj/mp_core.o: botantools/botan/mp_core.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mp_core.o botantools/botan/mp_core.cpp

.obj/mp_comba.o: botantools/botan/mp_comba.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mp_comba.o botantools/botan/mp_comba.cpp

.obj/mp_fkmul.o: botantools/botan/mp_fkmul.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mp_fkmul.o botantools/botan/mp_fkmul.cpp

.obj/mp_mul.o: botantools/botan/mp_mul.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mp_mul.o botantools/botan/mp_mul.cpp

.obj/mp_smul.o: botantools/botan/mp_smul.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mp_smul.o botantools/botan/mp_smul.cpp

.obj/mp_shift.o: botantools/botan/mp_shift.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mp_shift.o botantools/botan/mp_shift.cpp

.obj/mp_misc.o: botantools/botan/mp_misc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mp_misc.o botantools/botan/mp_misc.cpp

.obj/numthry.o: botantools/botan/numthry.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/numthry.o botantools/botan/numthry.cpp

.obj/divide.o: botantools/botan/divide.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/divide.o botantools/botan/divide.cpp

.obj/big_base.o: botantools/botan/big_base.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/big_base.o botantools/botan/big_base.cpp

.obj/big_code.o: botantools/botan/big_code.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/big_code.o botantools/botan/big_code.cpp

.obj/big_io.o: botantools/botan/big_io.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/big_io.o botantools/botan/big_io.cpp

.obj/big_ops2.o: botantools/botan/big_ops2.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/big_ops2.o botantools/botan/big_ops2.cpp

.obj/big_ops3.o: botantools/botan/big_ops3.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/big_ops3.o botantools/botan/big_ops3.cpp

.obj/mlock.o: botantools/botan/ml_unix/mlock.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mlock.o botantools/botan/ml_unix/mlock.cpp

.obj/mmap_mem.o: botantools/botan/alloc_mmap/mmap_mem.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mmap_mem.o botantools/botan/alloc_mmap/mmap_mem.cpp

.obj/synchronizer.o: support/synchronizer.cpp .moc/synchronizer.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/synchronizer.o support/synchronizer.cpp

.obj/dirwatch.o: support/dirwatch/dirwatch.cpp support/dirwatch/dirwatch_p.h \
		.moc/dirwatch.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/dirwatch.o support/dirwatch/dirwatch.cpp

.obj/dirwatch_unix.o: support/dirwatch/dirwatch_unix.cpp support/dirwatch/dirwatch_p.h \
		.moc/dirwatch_unix.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/dirwatch_unix.o support/dirwatch/dirwatch_unix.cpp

.obj/qca_tools.o: qca_tools.cpp botantools/botantools.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_tools.o qca_tools.cpp

.obj/qca_core.o: qca_core.cpp qca_plugin.h \
		.moc/qca_core.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_core.o qca_core.cpp

.obj/qca_textfilter.o: qca_textfilter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_textfilter.o qca_textfilter.cpp

.obj/qca_plugin.o: qca_plugin.cpp qca_plugin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_plugin.o qca_plugin.cpp

.obj/qca_basic.o: qca_basic.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_basic.o qca_basic.cpp

.obj/qca_publickey.o: qca_publickey.cpp .moc/qca_publickey.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_publickey.o qca_publickey.cpp

.obj/qca_cert.o: qca_cert.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_cert.o qca_cert.cpp

.obj/qca_keystore.o: qca_keystore.cpp .moc/qca_keystore.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_keystore.o qca_keystore.cpp

.obj/qca_securelayer.o: qca_securelayer.cpp .moc/qca_securelayer.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_securelayer.o qca_securelayer.cpp

.obj/qca_securemessage.o: qca_securemessage.cpp .moc/qca_securemessage.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_securemessage.o qca_securemessage.cpp

.obj/qca_default.o: qca_default.cpp qca_systemstore.h \
		.moc/qca_default.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_default.o qca_default.cpp

.obj/qpipe.o: support/qpipe.cpp .moc/qpipe.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qpipe.o support/qpipe.cpp

.obj/console.o: support/console.cpp .moc/console.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/console.o support/console.cpp

.obj/qca_systemstore_flatfile.o: qca_systemstore_flatfile.cpp qca_systemstore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qca_systemstore_flatfile.o qca_systemstore_flatfile.cpp

.obj/moc_qca_support.o: .moc/moc_qca_support.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_qca_support.o .moc/moc_qca_support.cpp

.obj/moc_qca_core.o: .moc/moc_qca_core.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_qca_core.o .moc/moc_qca_core.cpp

.obj/moc_qca_publickey.o: .moc/moc_qca_publickey.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_qca_publickey.o .moc/moc_qca_publickey.cpp

.obj/moc_qca_keystore.o: .moc/moc_qca_keystore.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_qca_keystore.o .moc/moc_qca_keystore.cpp

.obj/moc_qca_securelayer.o: .moc/moc_qca_securelayer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_qca_securelayer.o .moc/moc_qca_securelayer.cpp

.obj/moc_qca_securemessage.o: .moc/moc_qca_securemessage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_qca_securemessage.o .moc/moc_qca_securemessage.cpp

.obj/moc_qcaprovider.o: .moc/moc_qcaprovider.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_qcaprovider.o .moc/moc_qcaprovider.cpp

.obj/moc_qpipe.o: .moc/moc_qpipe.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_qpipe.o .moc/moc_qpipe.cpp

.obj/moc_dirwatch_p.o: .moc/moc_dirwatch_p.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_dirwatch_p.o .moc/moc_dirwatch_p.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

